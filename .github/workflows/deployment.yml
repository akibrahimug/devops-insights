name: Deploy to Cloud Run

on:
  push:
    branches: [master] # change if you deploy from main

# --------------------------------------------------------------------
# Global env â€” only static or secret-backed values here
# --------------------------------------------------------------------
env:
  REGION: ${{ secrets.GCP_REGION }} # e.g. europe-west2
  SERVICE: devops-insights # Cloud Run service name
  REPOSITORY: devops # Artifact Registry repo
  IMAGE_TAG: ${{ github.sha }} # immutable image tag

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # OIDC

    steps:
      # ---------------------------------------------------------------
      # 1) Checkout source
      # ---------------------------------------------------------------
      - uses: actions/checkout@v4

      # ---------------------------------------------------------------
      # 2) Authenticate to Google Cloud via Workload Identity
      # ---------------------------------------------------------------
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_DEPLOY_SA }}
          audience: "https://github.com/akibrahimug/devops-insights" # matches provider condition

      - uses: google-github-actions/setup-gcloud@v2

      # ---------------------------------------------------------------
      # 3) Compose full IMAGE name and export to later steps
      # ---------------------------------------------------------------
      - id: vars
        run: |
          echo "IMAGE=${{ env.REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ env.IMAGE_TAG }}" >> "$GITHUB_ENV"

      # ---------------------------------------------------------------
      # 4) Build & push Docker image
      # ---------------------------------------------------------------
      - name: Build & push image
        run: |
          set -euo pipefail
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet
          docker build -f server/Dockerfile -t "$IMAGE" server/
          docker push "$IMAGE"

      # ---------------------------------------------------------------
      # 5) Deploy to Cloud Run
      # ---------------------------------------------------------------
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE }} \
            --region=${{ env.REGION }} \
            --platform=managed \
            --image="$IMAGE" \
            --allow-unauthenticated \
            --memory=512Mi \
            --port=5000 \
            --set-env-vars=DATABASE_URL=${{ secrets.DATABASE_URL }},EXTERNAL_API_NAME=${{ secrets.EXTERNAL_API_NAME }}
